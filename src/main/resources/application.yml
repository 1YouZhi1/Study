#--------------------------????-------------------------
spring:
  application:
    # ???
    name: study
  profiles:
    # ??????
    active: dev
  jackson:
    generator:
      # JSON ???????? Number ???????? String ???????????????????
      # ?? Javascript ?????????????? 64 ? IEEE 754 ??????
      # ????? 64 ??????????????? 51 ???
      write-numbers-as-strings: true
  servlet:
    multipart:
      # ????????
      max-file-size: 5MB
server:
  # ???
  port: 8888

--- #---------------------?????---------------------------
spring:
  datasource:
    url: jdbc:mysql://localhost:3306/study?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai
    username: root
    password: root
  # ShardingSphere-JDBC ??
  # ??? ShardingSphere-JDBC ???????????????
  # ???????????? ShardingSphere-JDBC ???????
  shardingsphere:
    # ????????
    enabled: false
    props:
      # ???????? SQL
      sql-show: true
    # ????
    mode:
      # ????
      type: Standalone
      repository:
        # ?????
        type: File
        props:
          # ???????
          path: .shardingsphere
      # ?????????????
      overwrite: true
    # ?????
    datasource:
      names: ds_0
      ds_0:
        type: com.zaxxer.hikari.HikariDataSource
        driverClassName: com.mysql.cj.jdbc.Driver
        jdbcUrl: jdbc:mysql://localhost:3306/study?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai
        username: root
        password: root
#    # ????
#    rules:
#      # ????
#      sharding:
#        tables:
#          # book_content ?
#          book_content:
#            # ????
#            actual-data-nodes: ds_$->{0}.book_content$->{0..9}
#            # ????
#            table-strategy:
#              standard:
#                # ?????
#                sharding-column: chapter_id
#                # ??????
#                sharding-algorithm-name: bookContentSharding
#        sharding-algorithms:
#          bookContentSharding:
#            # ??????????? Groovy ???????? SQL ???? = ? IN ???????
#            type: INLINE
#            props:
#              # ?????????
#              algorithm-expression: book_content$->{chapter_id % 10}

--- #---------------------?????---------------------------
spring:
  data:
    # Redis ??
    redis:
      host: 127.0.0.1
      port: 6379

  # Elasticsearch ??
  elasticsearch:
    # ???? Elasticsearch ???????true-?? false-???
    enabled: false
    uris:
      - https://my-deployment-ce7ca3.es.us-central1.gcp.cloud.es.io:9243
    username: elastic
    password: qTjgYVKSuExX6tWAsDuvuvwl
    # ?? ssl ????????????? none ?????????????? ssl ???
  #    ssl:
  #      verification-mode: none

  # Spring AMQP ??
  amqp:
    # ???? Spring AMQP?true-?? false-???
    enabled: false
  # RabbitMQ ??
  rabbitmq:
    addresses: "amqp://guest:guest@47.106.243.172"
    virtual-host: novel
    template:
      retry:
        # ????
        enabled: true
        # ??????
        max-attempts: 3
        # ????????????????
        initial-interval: "3s"

# XXL-JOB ??
xxl:
  job:
    # ???? XXL-JOB?true-?? false-???
    enabled: false
    admin:
      ### ????????? [??]???????????????????????????????????"???????"?"??????"???????????
      addresses: http://127.0.0.1:8080/xxl-job-admin
    executor:
      ### ???AppName [??]??????????????????????
      appname: xxl-job-executor-novel
      ### ??????????????? [??] ????????????????????????
      logpath: logs/xxl-job/jobhandler
    ### xxl-job, access token
    accessToken: 123

--- #----------------------????----------------------------
spring:
  # Spring Boot ???????
  boot:
    admin:
      client:
        # ???? Spring Boot Admin ???
        enabled: false
        # Spring Boot Admin ???????
        url: http://localhost:8080
        # Spring Boot Admin ????????
        username: study
        # Spring Boot Admin ???????
        password: study
        instance:
          metadata:
            # SBA Client
            user.name: ${spring.security.user.name}
            user.password: ${spring.security.user.password}
  security:
    user:
      name: ENDPOINT_ADMIN
      password: ENDPOINT_ADMIN
      roles: ENDPOINT_ADMIN

# Actuator ????
management:
  # ??????
  endpoints:
    # ?? HTTP ??? Web ??
    web:
      exposure:
        # ????? Web ??
        include: "*"
  # ??????
  endpoint:
    logfile:
      # ?????????????
      enabled: true
      # ????????
      external-file: logs/study.log
  info:
    env:
      # ????? info. ???????
      enabled: true
  health:
    rabbit:
      # ?? rabbitmq ?????
      enabled: false
    elasticsearch:
      # ?? elasticsearch ?????
      enabled: false
    mail:
      # ?? mail ?????
      enabled: false

--- #--------------------??????---------------------------
springdoc:
  api-docs:
    enabled: false

--- #----------------------????-----------------------------
#?????
#spring:
#  mail:
#    host: smtp.163.com
#    #?????
#    nickname: xxyopen
#    #????
#    username: xxx@163.com
#    #????????
#    password: xxx
#    #????
#    default-encoding: UTF-8
#    port: 465
#    properties:
#      mail:
#        smtp:
#          auth: true
#          starttls:
#            enable: true
#            required: rue
#          socketFactory:
#            port: 465
#            class: javax.net.ssl.SSLSocketFactory
#            fallback: false

--- #---------------------?????----------------------------
study:
  # ????
  cors:
    # ???????
    allow-origins:
      - http://localhost:1024
      - http://localhost:8080
  # JWT??
  jwt:
    secret: E66559580A1ADF48CDD928516062F12E
  # XSS ????
  xss:
    # ????
    enabled: true
    # ????
    excludes:
      - /system/notice/*
  file:
    # ??????
    upload:
      # ????
      path: /Users/xiongxiaoyang/upload


--- #------------------- dev ????---------------------------
spring:
  config:
    activate:
      on-profile: dev
springdoc:
  api-docs:
    enabled: true

--- #------------------- test ????--------------------------
spring:
  config:
    activate:
      on-profile: test

--- #-------------------- prod ????-------------------------
spring:
  config:
    activate:
      on-profile: prod
  data:
    # Redis ??
    redis:
      host: 127.0.0.1
      port: 6379
      password:
